{% extends 'base.html.twig' %} 



 {%  block content %}



 <div class="container-xxl flex-grow-1 container-p-y">
 

<h5> <a href="{{ path('app_fichiers') }}">Dossier  </a> > {{ dossier.nom }}</h5>
 <div class="mb-3 d-flex flex-column flex-md-row align-items-start gap-2">
  <div class="d-flex flex-column">
    <label for="date-filter" class="form-label">Filtrer par date :</label>
    <input type="date" id="date-filter" class="form-control w-100 w-md-auto">
  </div>

  <!-- Boutons -->
  <div class="d-flex gap-2 mt-2 mt-md-4">
    <button type="button" class="btn btn-success " data-bs-toggle="modal" data-bs-target="#uploadModal">
  Ajouter fichier(s)
 </button>


<button class="btn btn-danger" id="deleteSelectedBtn" disabled>Supprimer la s√©lection <span id="selectedCount" class="badge badge-center rounded-pill bg-primary">0</span>
</button>
   
  </div>
 
</div>





<div class="row row-cols-1 row-cols-md-4 g-3 mb-5" id="fichier-grid">


<!-- La fen√™tre modale Bootstrap  pour ajouter fichier-->
<div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="uploadModalLabel">Uploader fichiers dans "{{ dossier.nom }}"</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
      </div>
      <div class="modal-body">
      
        {{ form_start(form, {'attr': {'enctype': 'multipart/form-data'}}) }}


        <div class="mb-3">
          <label for="formFile" class="form-label">Fichier</label>
        {{ form_widget(form.fichier, {'attr': {'class': 'form-control', 'multiple': 'multiple'}}) }}
            {{ form_errors(form.fichier) }}
        </div>
        {{ form_widget(form.dossier, {'attr': {'type': 'hidden', 'style': 'display:none;'}}) }}

          <input type="hidden" name="dossier_id" value="{{ dossier.id }}">
          <button type="submit" class="btn btn-primary mt-3">Envoyer</button>
        {{ form_end(form) }}
      </div>
    </div>
  </div>
</div>

 {% for fichier in fichiers %}
    {% set ext = fichier.chemin|split('.')|last|lower %}
    {% set isImage = ext in ['jpg', 'jpeg', 'png', 'gif', 'webp'] %}
    {% set dateUpload = fichier.uploadedAt ? fichier.uploadedAt|date('Y-m-d') : '' %}
        {% set isFile = ext in ['docx', 'rtf', 'pdf', 'txt'] %}

    <div class="col fichier-card" data-date="{{ dateUpload }}">
    
      <div class="card h-100 shadow-sm p-2">
       <!-- Checkbox de s√©lection -->
       
  <input type="checkbox" class="form-check-input file-checkbox position-absolute" style="top: 8px; left: 8px; border-radius: 50%; hover:width: 2px;cursor: pointer; border: 2px solid #40E00B;" value="{{ fichier.id }}">
        {% if isImage %}
          <img class="card-img-top img-fluid" src="{{ path('app_serve_fichier', {'path': fichier.chemin}) }}" alt="{{ fichier.nom }}" style="max-height: 150px; object-fit: cover;">
        {% else %}
          {# Ici on met une ic√¥ne g√©n√©rique pour les fichiers non images #}
          <img class="card-img-top img-fluid" src="{{ asset('assets/img/icons/fichiertxt.png') }}" alt="Fichier" style="max-height: 150px; object-fit: contain;">
        {% endif %}
        <div class="card-body p-2">
          <h6 class="card-title small text-truncate" title="{{ fichier.nom }}">{{ fichier.nom }}</h6>
          <p class="card-text small text-muted mb-1">üìÖ {{ dateUpload ? dateUpload|date('d/m/Y') : 'Inconnu' }}</p>
        </div>
        <div class="card-footer bg-white border-top-0 d-flex justify-content-between p-2">
        {# <a class="btn btn-sm btn-outline-primary" href="{{ path('app_serve_file', {'path': fichier.chemin}) }}"  target="_blank">Voir</a> #}
        <a  href="{{ path('app_fichier_dupliquer', {'path': fichier.chemin, 'id': dossier.id}) }}">
<img src="{{ asset('assets/img/icons/copy.png') }}" alt="Dupliquer" style="max-height: 18px; object-fit: contain;  filter: invert(66%) sepia(62%) saturate(5397%) hue-rotate(5deg) brightness(97%) contrast(101%);">
</a>
<a class="btn btn-sm btn-outline-primary" href="javascript:void(0);" onclick="openOverlay('{{ path('app_serve_file', {'path': fichier.chemin}) }}')">Voir</a>


<a class="btn btn-sm btn-outline-success" href="{{ path('app_serve_file', {'path': fichier.chemin}) }}"  download="{{ fichier.nom }}">T√©l√©charger</a>
{% if isFile %}
<a class="btn btn-sm btn-outline-primary" href="{{ path('app_editeur_fichier', {id: fichier.id}) }}">
    ‚úèÔ∏è 
</a>
{% endif %}


          <!-- Bouton d√©clencheur -->
        <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal{{ fichier.id }}">
          üóë
        </button>
        
        </div>
      </div>
    </div>
    <!-- Modale de confirmation de suppresion -->
<div class="modal fade" id="confirmDeleteModal{{ fichier.id }}" tabindex="-1" aria-labelledby="confirmDeleteModalLabel{{ fichier.id }}" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      
      <div class="modal-header">
        <h5 class="modal-title" id="confirmDeleteModalLabel{{ fichier.id }}">Confirmer la suppression</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
      </div>
      
      <div class="modal-body">
        √ätes-vous s√ªr de vouloir supprimer le fichier <strong>{{ fichier.nom }}</strong> ?
      </div>
      
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
        
        <form method="post" action="{{ path('app_fichier_supprimer', { id: fichier.id }) }}">
          <button type="submit" class="btn btn-danger">Supprimer</button>
        </form>
      </div>
      
    </div>
  </div>
</div>
{% else %}
    <div class="col">
      <div class="alert alert-warning w-100">Aucun fichier trouv√©.</div>
    </div>
    
{% endfor %}

</div>

<a href="{{ path('app_fichiers') }}" class="btn btn-secondary">Retour √† la liste g√©n√©rale</a>
</div>

<!-- Overlay -->
<div id="fileOverlay" style="display: none; position: fixed; z-index: 9999; top: 0; left: 0; width: 100vw; height: 100vh; background: rgba(0,0,0,0.7);">
  <div style="position: relative; width: 90%; height: 90%; margin: 5vh auto; background: white; border: 5px solid #40E00B; border-radius: 10px; overflow: hidden;">
  <button onclick="closeOverlay()" style="position: absolute; top: 10px; right: 10px; z-index: 10; " class="btn btn-success">Fermer</button>
    <iframe id="fileViewer" src="" style="width: 100%; height: 100%; border: none;"></iframe>
  </div>
</div>





<script src="{{ asset('assets/vendor/libs/popper/popper.js') }}"></script>


<script>
  function openOverlay(fileUrl) {
    const overlay = document.getElementById('fileOverlay');
    const viewer = document.getElementById('fileViewer');
    viewer.src = fileUrl;
    overlay.style.display = 'block';
  }

  function closeOverlay() {
    const overlay = document.getElementById('fileOverlay');
    const viewer = document.getElementById('fileViewer');
    viewer.src = '';
    overlay.style.display = 'none';
  }
</script>
<script>
  // D√©finir une constante pour l'ID du dossier (prot√©g√© contre le HTML injection)
  const DOSSIER_ID = {{ dossier.id|json_encode|raw }};

  document.addEventListener('DOMContentLoaded', () => {
    const checkboxes = document.querySelectorAll('.file-checkbox');
    const deleteBtn = document.getElementById('deleteSelectedBtn');
    const countBadge = document.getElementById('selectedCount');

    // Met √† jour le badge et active/d√©sactive le bouton de suppression
    function updateSelectionState() {
      const selected = Array.from(checkboxes).filter(cb => cb.checked);
      const selectedCount = selected.length;

      countBadge.textContent = selectedCount;
      deleteBtn.disabled = selectedCount === 0;
    }

    // Ajouter un √©couteur √† chaque case √† cocher
    checkboxes.forEach(cb => {
      cb.addEventListener('change', updateSelectionState);
    });

    // G√©rer la suppression lors du clic
    deleteBtn.addEventListener('click', () => {
      const selectedIds = Array.from(checkboxes)
        .filter(cb => cb.checked)
        .map(cb => cb.value);

      if (selectedIds.length === 0) return;

      if (!confirm(`Supprimer ${selectedIds.length} fichier(s) ?`)) return;

      fetch('{{ path('app_fichiers_supprimer_selection') }}', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest',
          'X-CSRF-TOKEN': '{{ csrf_token('supprimer_fichiers') }}'
        },
        body: JSON.stringify({
          dossierId: DOSSIER_ID,
          ids: selectedIds
        })
      })
      .then(response => {
        if (response.ok) {
          location.reload();
        } else {
          alert("Erreur lors de la suppression.");
        }
      })
      .catch(error => {
        console.error("Erreur r√©seau :", error);
        alert("Une erreur r√©seau est survenue.");
      });
    });
  });
</script>

<script>


</script>

{% endblock %}
